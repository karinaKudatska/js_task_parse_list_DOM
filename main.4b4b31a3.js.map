{"version":3,"sources":["scripts/main.js"],"names":["employeeList","document","querySelector","employee","Array","from","querySelectorAll","sortEmployeeList","people","sortList","sort","a","b","dataset","salary","replace","append","employeeObjects","map","person","name","innerText"],"mappings":";AAAA,aAwBA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAtBA,IAAMA,EAAeC,SAASC,cAAc,MAEtCC,EAAWC,MAAMC,KAAKJ,SAASK,iBAAiB,OAEtD,SAASC,EAAiBC,GAClBC,IAAAA,EAAWD,EAAOE,KAAK,SAACC,EAAGC,GAC/B,OAACA,EAAEC,QAAQC,OAAOC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,KAC/CJ,EAAEE,QAAQC,OAAOC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,MAElDf,EAAagB,OAAbhB,MAAAA,EAAuBS,EAAAA,IAGzB,SAASQ,EAAgBT,GAChBA,OAAAA,EAAOU,IAAI,SAAAC,GAAM,OAAA,EAAA,CAEpBC,KAAMD,EAAOE,WACVF,EAAON,WAKhBN,EAAiBJ,GACjBc,EAAgBd","file":"main.4b4b31a3.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst employeeList = document.querySelector('ul');\n\nconst employee = Array.from(document.querySelectorAll('li'));\n\nfunction sortEmployeeList(people) {\n  const sortList = people.sort((a, b) =>\n    +b.dataset.salary.replace(',', '').replace('$', '')\n  - +a.dataset.salary.replace(',', '').replace('$', ''));\n\n  employeeList.append(...sortList);\n}\n\nfunction employeeObjects(people) {\n  return people.map(person => (\n    {\n      name: person.innerText,\n      ...person.dataset,\n    }\n  ));\n}\n\nsortEmployeeList(employee);\nemployeeObjects(employee);\n"]}